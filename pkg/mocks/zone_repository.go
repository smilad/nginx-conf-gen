// Code generated by MockGen. DO NOT EDIT.
// Source: nginx/repository_contract (interfaces: IZoneRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "nginx/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIZoneRepository is a mock of IZoneRepository interface.
type MockIZoneRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIZoneRepositoryMockRecorder
}

// MockIZoneRepositoryMockRecorder is the mock recorder for MockIZoneRepository.
type MockIZoneRepositoryMockRecorder struct {
	mock *MockIZoneRepository
}

// NewMockIZoneRepository creates a new mock instance.
func NewMockIZoneRepository(ctrl *gomock.Controller) *MockIZoneRepository {
	mock := &MockIZoneRepository{ctrl: ctrl}
	mock.recorder = &MockIZoneRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIZoneRepository) EXPECT() *MockIZoneRepositoryMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockIZoneRepository) Get(arg0 context.Context, arg1 int64) (models.CacheZone, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(models.CacheZone)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockIZoneRepositoryMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIZoneRepository)(nil).Get), arg0, arg1)
}

// GetAll mocks base method.
func (m *MockIZoneRepository) GetAll(arg0 context.Context) ([]models.CacheZone, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", arg0)
	ret0, _ := ret[0].([]models.CacheZone)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockIZoneRepositoryMockRecorder) GetAll(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockIZoneRepository)(nil).GetAll), arg0)
}

// Save mocks base method.
func (m *MockIZoneRepository) Save(arg0 context.Context, arg1 models.CacheZone) (models.CacheZone, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0, arg1)
	ret0, _ := ret[0].(models.CacheZone)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Save indicates an expected call of Save.
func (mr *MockIZoneRepositoryMockRecorder) Save(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockIZoneRepository)(nil).Save), arg0, arg1)
}
